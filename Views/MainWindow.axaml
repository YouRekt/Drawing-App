<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:DrawingAppCG.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:conv="using:DrawingAppCG.Models.Converters"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
		x:CompileBindings="True"
        x:Class="DrawingAppCG.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="DrawingAppCG">

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainWindowViewModel/>
	</Design.DataContext>

	<Window.Resources>
		<TransformGroup x:Key="ImageTransform">
			<ScaleTransform/>
			<TranslateTransform/>
		</TransformGroup>
		<conv:FillModeConverter x:Key="FillModeConverter"/>
	</Window.Resources>

	<DockPanel>
		<Menu DockPanel.Dock="Top">
			<MenuItem Header="File">
				<MenuItem Header="Save" Click="Save_Click"/>
				<MenuItem Header="Load" Click="Load_Click"/>
			</MenuItem>
			<MenuItem Header="{Binding SelectedTool,UpdateSourceTrigger=PropertyChanged, StringFormat='Tool: {0}'}">
				<MenuItem Header="Line" Click="SelectLineTool" />
				<MenuItem Header="Circle" Click="SelectCircleTool" />
				<MenuItem Header="Rectangle" Click="SelectRectangleTool" />
				<MenuItem Header="Polygon" Click="SelectPolygonTool" />
				<MenuItem Header="Pill" Click="SelectPillTool" />
				<MenuItem Header="Move" Click="SelectMoveTool" />
				<MenuItem Header="Clip" Click="SelectClipTool" />
			</MenuItem>
			<MenuItem Header="Render Options">
				<MenuItem Header="Antialiased" IsChecked="{Binding IsAntialiased,Mode=TwoWay}" ToggleType="CheckBox"/>
			</MenuItem>
			<MenuItem Header="Fill Mode">
				<MenuItem Header="None" ToggleType="Radio" IsChecked="{Binding FillMode, Converter={StaticResource FillModeConverter}, ConverterParameter=None, Mode=TwoWay}" />
				<MenuItem Header="Color" ToggleType="Radio" IsChecked="{Binding FillMode, Converter={StaticResource FillModeConverter}, ConverterParameter=Color, Mode=TwoWay}" />
				<MenuItem Header="Image" ToggleType="Radio" IsChecked="{Binding FillMode, Converter={StaticResource FillModeConverter}, ConverterParameter=Image, Mode=TwoWay}" />
			</MenuItem>
			<MenuItem Header="Clear Shapes" Click="ClearShapes"/>
			<MenuItem Header="Toggle AA for all Shapes" Click="ToggleAA"/>
			<MenuItem Header="Delete Shape" IsEnabled="{Binding SelectedShape,UpdateSourceTrigger=PropertyChanged,Converter={x:Static ObjectConverters.IsNotNull}}" Command="{Binding DeleteSelectedShape}" HotKey="Delete"/>
		</Menu>
		<StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
			<StackPanel>
				<TextBlock Text="{Binding SelectedThickness,StringFormat='Pen Thickness: {0} px'}" Width="140" Margin="12,0,5,0" VerticalAlignment="Center"/>
				<Slider Width="100" Minimum="1" Maximum="15" TickFrequency="1" IsSnapToTickEnabled="True" Value="{Binding SelectedThickness, Mode=TwoWay}" />
			</StackPanel>
			<StackPanel Margin="0,0,20,0">
				<TextBlock Text="Pen Color" Margin="12,0,5,0" VerticalAlignment="Center"/>
				<ColorPicker Width="100" Margin="10,10,0,0" Color="{Binding SelectedColor,Mode=TwoWay}"/>
			</StackPanel>
			<StackPanel>
				<TextBlock Text="Fill Mode" Margin="12,0,5,0" VerticalAlignment="Center"/>
				<TextBlock Text="None" Margin="12,15,5,0" VerticalAlignment="Center" IsVisible="{Binding FillMode, Converter={StaticResource FillModeConverter},ConverterParameter=None }"/>
				<ColorPicker IsVisible="{Binding FillMode, Converter={StaticResource FillModeConverter},ConverterParameter=Color }" Width="100" Margin="10,10,0,0" Color="{Binding FillColor,Mode=TwoWay}"/>
				<Button IsVisible="{Binding FillMode, Converter={StaticResource FillModeConverter},ConverterParameter=Image }" Margin="10,10,0,0" Content="Choose Fill Image" Click="FillImage_Click"/>
			</StackPanel>
		</StackPanel>
		<Panel>
			<Border ClipToBounds="True">
				<Canvas>
					<Image Name="ImageCanvas" RenderTransform="{StaticResource ImageTransform}" RenderOptions.BitmapInterpolationMode="None" Source="{Binding Bitmap,UpdateSourceTrigger=PropertyChanged}" Stretch="None" PointerPressed="Image_PointerPressed" PointerMoved="Image_PointerMoved" PointerWheelChanged="Image_PointerWheelChanged" PointerReleased="Image_PointerReleased"/>
					<Image Name="ImageOverlay" RenderTransform="{StaticResource ImageTransform}" RenderOptions.BitmapInterpolationMode="None" Source="{Binding Overlay}" Stretch="None" IsHitTestVisible="False"/>
				</Canvas>
			</Border>
		</Panel>
	</DockPanel>
</Window>
